// WARNING: Do NOT edit the input and output ports in this file in a text
// editor if you plan to continue editing the block that represents it in
// the Block Editor! File corruption is VERY likely to occur.

// Copyright (C) 1991-2010 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.


// Generated by Quartus II Version 9.1 (Build Build 350 03/24/2010)
// Created on Sat Mar 25 16:10:15 2017

//  Module Declaration
module block_name
(
	// {{ALTERA_ARGS_BEGIN}} DO NOT REMOVE THIS LINE!
	clk, P, clkout, y, Z
	// {{ALTERA_ARGS_END}} DO NOT REMOVE THIS LINE!
);
// Port Declaration

	// {{ALTERA_IO_BEGIN}} DO NOT REMOVE THIS LINE!
	input clk;
	input [2:1] P;
	output clkout;
	output [10:0] y;
	output Z;
	// {{ALTERA_IO_END}} DO NOT REMOVE THIS LINE!
integer pc=1;  
reg [10:0] y;
wire clkout;
reg Z=0;
assign clkout=!clk;
always @(posedge clk) 
begin
case (pc)
1:begin
y=11'b11100000001;
pc=pc+1;
if (P[1]==0) begin
pc=7;
end
end
2:begin
y=11'b00000000000;
pc=pc+1;
end
3:begin
y=11'b00000000010;
pc=pc+1;
if (P[1]==0) begin
pc=7;
end
end
4:begin
y=11'b00100000000;
pc=pc+1;
end
5:begin
y=11'b00001001000;
pc=pc+1;
if (P[2]==1) begin
pc=8;
Z=1;
end
end
6:begin
y=11'b10001000100;
pc=4;
end
7:begin
y=11'b00001100000;
Z=1;
end
default y=11'b000000000; 
endcase;
end
endmodule
