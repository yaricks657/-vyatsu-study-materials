// WARNING: Do NOT edit the input and output ports in this file in a text
// editor if you plan to continue editing the block that represents it in
// the Block Editor! File corruption is VERY likely to occur.

// Copyright (C) 1991-2010 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.


// Generated by Quartus II Version 9.1 (Build Build 350 03/24/2010)
// Created on Thu Mar 08 17:11:18 2012

//  Module Declaration
module UA
(
	// {{ALTERA_ARGS_BEGIN}} DO NOT REMOVE THIS LINE!
	p, clk, clkout, y, Z
	// {{ALTERA_ARGS_END}} DO NOT REMOVE THIS LINE!
);
// Port Declaration

	// {{ALTERA_IO_BEGIN}} DO NOT REMOVE THIS LINE!
	input [10:0] p;
	input clk;
	output clkout;
	output [11:0] y;
	output Z;
	// {{ALTERA_IO_END}} DO NOT REMOVE THIS LINE!
integer pc=1;
reg [11:0] y;
wire clkout;
reg Z=0;
assign clkout=!clk;
always @(posedge clk)
begin
case(pc)
1:begin
y=12'b000000000011;
pc=pc+1;
end

2:begin
if(p[5]==1) begin
y=12'b000000010000;
pc=pc+1;end
else begin
pc=16;
end;
end

3:begin
y=12'b000000000010;
pc=pc+1;
end

4:begin
if(p[5]==1) begin
y=12'b000000010000;
pc=pc+1;end
else begin
pc=16;
end;
end

5:begin
y=12'b000000000000;
if (p[7]==0)begin
pc=pc+1;
end else begin
pc=17;
end
end

6:begin
if(p[3]==0)begin
pc=pc+1;
end
else
begin
pc=16;
end
end

7:begin
if(p[4]==1)begin
y=12'b000001000000;
pc=pc+1;
end
else begin
pc=pc+1;
end;
end
8:begin
y=12'b000000000100;
pc=pc+1;
end

9:begin
y=12'b000000000000;
if(p[6]==0)begin
pc=7;
end
else begin
pc=pc+1;
end
end
//от 10 навставлял обнуление команд
10:begin
y=12'b000000000000;
if(p[1]==1)begin
y=12'b000001001000;
end;
pc=pc+1;
end

11:begin
y=12'b000000000000;
if(p[2]==1)begin
y=12'b000011001000;
end
pc=pc+1;
end

12:begin
y=12'b000000000000;
if(p[9]==0)begin
y=12'b000000100000;
end
pc=pc+1;
end

13:begin
y=12'b000000000000;
if(p[8]==1)begin
pc=17;
end
else
begin
pc=pc+1;
end
end

14:begin
y=12'b000000000000;
if(p[3]==1)begin
pc=16;
end
else
begin
pc=pc+1;
end
end

15:begin
y=12'b000000000000;
Z=1;
end
16:begin
y=12'b000100000011;
pc=15;
end

17:begin
y=12'b010000000000;
pc=15;
end



endcase;
end
endmodule
