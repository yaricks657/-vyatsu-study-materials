// WARNING: Do NOT edit the input and output ports in this file in a text
// editor if you plan to continue editing the block that represents it in
// the Block Editor! File corruption is VERY likely to occur.

// Copyright (C) 1991-2010 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.


// Generated by Quartus II Version 9.1 (Build Build 350 03/24/2010)
// Created on Fri Mar 06 15:08:35 2020

//  Module Declaration
module UA
(
	// {{ALTERA_ARGS_BEGIN}} DO NOT REMOVE THIS LINE!
	clk, p, Z, clkout, y
	// {{ALTERA_ARGS_END}} DO NOT REMOVE THIS LINE!
);
// Port Declaration

	// {{ALTERA_IO_BEGIN}} DO NOT REMOVE THIS LINE!
	input clk;
	input [8:0] p;
	output Z;
	output clkout;
	output [12:0] y;
	// {{ALTERA_IO_END}} DO NOT REMOVE THIS LINE!

integer pc=1;
reg [12:0] y;
wire clkout;
reg Z = 0;
assign clkout=!clk;
always @(posedge clk)
begin
case (pc)
1:
	begin	
			y=13'b0000000001101; //0 2 3
			pc = pc + 1;
	end
2:
	begin	
	y=13'b0001001000000; // 6 9
	pc = pc + 1;
	end	
	
3: begin
   y=13'b0000000000100; // 2
   pc = pc + 1;
   end
4:
	begin	
	y=13'b0000000000000;
	if (p[0] == 1) 
		begin
		y=13'b1000000000000;
		pc = 12;//konec
		end	
	else begin if (p[7] == 1 ) 
		begin
		y=13'b0000000000011; // 0 1
		pc = 11; //rez
		end
	else 
		begin 
		y=13'b0001100000000; //8 9
		pc = pc+1;
		end
	end
	end
5:
	begin	
	y=13'b0000000000000;
	if (p[2] == 1) //prs
		begin
		y=13'b0100000000000; //11
		pc = 12; //konec
		end
	else begin if (p[3] == 1) //pmr
		begin
		y=13'b0000000000011; // 0 1
		pc = 11; //rez
		end
	else 
	begin
		y=13'b0000001100000; // 5 6
		pc = pc+1; 
	end
	end
	end
	
6: begin
	if (p[1] == 1)
		begin
		y=13'b0000001000000;
		pc = pc + 1;
		end
	else 
		begin
		y=13'b0000000010000; //4
		pc = pc + 2;
		end
	end

7:
	begin	
	y=13'b0000000010000; //4
	pc = pc + 1;
	end
8:
	begin
	y=13'b0000000000000;
	if (p[6] == 0) 
		begin
		y=13'b0000001100000; //5 6
		pc = 6; //ia?aeoe e o11
		end
	else  begin if (p[5] == 0) 
			begin
			y=13'b0010000000000; //10
			pc = 9;
			end
	else begin if (p[4] == 1) 
			begin
			y=13'b0000000000011; //0 1
			pc = 11; //rez
			end		
	else pc = 11; //rez
		end
		end
		end
		
9:
	begin	
	if (p[2] == 1) 
			begin	
				y=13'b0100000000000; //11
				pc = 12; //konec
			end
	else 
		begin
			pc = 11; //rez
		end
	end
10: 
	begin
	y=13'b0000000000000;
	Z = 1;
	end

11: begin
	y=13'b0000010000000;
	pc = 10;
	end

default y=13'b0000000000000;
endcase;
end
endmodule

