unit SeaFightBotImpl;

{$mode objfpc}{$H+}

interface

type
TByteArray = array of Byte;
TByteArray2D = array of TByteArray;

const
EMPTY = 0;

BLOCK = 1;

DAMAGE = 2;

KILL = 3;

function getMap: TByteArray2D;
function shoot: TByteArray;
procedure shootResult(resultCode: integer);
procedure rivalShoot(point: TByteArray);
procedure setParams(setsPerGame: integer);
procedure onCurrentSetEnd;
procedure onCurrentGameEnd;

implementation

var x,y:integer;
i,j,mas:integer;
m:array [0..9,0..9] of byte;
dop: array [0..9,0..9] of byte;
enemy:array of integer;
minus: array [0..9,0..9] of boolean;
xx,yy:integer;
a,b,c,d,e,f,g:boolean;
iii:integer;

function getMap: TByteArray2D;
var second_one,one:integer;
begin
if vopros= false then begin	//задаём начальную расстановку
getMap := TByteArray2D.Create(
 TByteArray.Create(0, 0, 0, 0, 0, 0, 0, 1, 1, 0),
 TByteArray.Create(0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
 TByteArray.Create(0, 0, 0, 0, 0, 0, 0, 0, 0, 1),
 TByteArray.Create(0, 0, 0, 0, 0, 0, 0, 0, 0, 1),
 TByteArray.Create(0, 0, 0, 0, 1, 0, 0, 0, 0, 1),
 TByteArray.Create(1, 0, 1, 0, 0, 0, 0, 0, 0, 0),
 TByteArray.Create(1, 0, 0, 0, 0, 0, 0, 0, 0, 1),
 TByteArray.Create(1, 0, 0, 0, 0, 1, 0, 1, 0, 1),
 TByteArray.Create(0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
 TByteArray.Create(0, 0, 1, 1, 0, 1, 1, 1, 1, 0)
 );
m[0,7]:=1;
m[0,8]:=1;
m[2,9]:=1;
m[3,9]:=1;
m[4,9]:=1;
m[4,4]:=1;
m[5,0]:=1;
m[6,0]:=1;
m[7,0]:=1;
m[5,2]:=1;
m[7,5]:=1;
m[7,7]:=1;
m[6,9]:=1;
m[7,9]:=1;
m[9,2]:=1;
m[9,3]:=1;
m[9,5]:=1;
m[9,6]:=1;
m[9,7]:=1;
m[9,8]:=1;
end else
begin		//последюущие расстановки. Палубники смещаются на 1 по x и y, а остальные корабли немного по-другому.
for i:=0 to 9 do begin	//Все корабли кроме парусников
dop[0,i]:=m[0,i];
dop[9,i]:=m[9,i];
dop[i,0]:=m[i,0];
dop[i,9]:=m[i,9];
end;
for i:=0 to 9 do
begin
m[0,i]:=0;
m[9,i]:=0;
m[i,0]:=0;
m[i,9]:=0;
end;
for i:=0 to 9 do
begin
m[0,i]:=dop[9,i];
m[9,i]:=dop[0,i];
m[i,0]:=dop[i,9];
m[i,9]:=dop[i,0];
end;
for i:=7 downto 2 do		//парусники
for j:=7 downto 2 do
begin
if m[i,j]=1 then
begin
m[i,j]:=0;
if (j=7) and (i=7) then
m[2,2]:=1 else
if j=7 then
m[i+1,2]:=1 else
if i=7 then
m[2,j+1]:=1 else
m[i+1,j+1]:=1;
end;
end;		//конечное значение getMap;
getMap := TByteArray2D.Create(
 TByteArray.Create(m[0,0], m[0,1],m[0,2], m[0,3], m[0,4], m[0,5], m[0,6], m[0,7], m[0,8], m[0,9]),
 TByteArray.Create(m[1,0], m[1,1],m[1,2], m[1,3], m[1,4], m[1,5], m[1,6], m[1,7], m[1,8], m[1,9]),
 TByteArray.Create(m[2,0], m[2,1],m[2,2], m[2,3], m[2,4], m[2,5], m[2,6], m[2,7], m[2,8], m[2,9]),
 TByteArray.Create(m[3,0], m[3,1],m[3,2], m[3,3], m[3,4], m[3,5], m[3,6], m[3,7], m[3,8], m[3,9]),
 TByteArray.Create(m[4,0], m[4,1],m[4,2], m[4,3], m[4,4], m[4,5], m[4,6], m[4,7], m[4,8], m[4,9]),
 TByteArray.Create(m[5,0], m[5,1],m[5,2], m[5,3], m[5,4], m[5,5], m[5,6], m[5,7], m[5,8], m[5,9]),
 TByteArray.Create(m[6,0], m[6,1],m[6,2], m[6,3], m[6,4], m[6,5], m[6,6], m[6,7], m[6,8], m[6,9]),
 TByteArray.Create(m[7,0], m[7,1],m[7,2], m[7,3], m[7,4], m[7,5], m[7,6], m[7,7], m[7,8], m[7,9]),
 TByteArray.Create(m[8,0], m[8,1],m[8,2], m[8,3], m[8,4], m[8,5], m[8,6], m[8,7], m[8,8], m[8,9]),
 TByteArray.Create(m[9,0], m[9,1],m[9,2], m[9,3], m[9,4], m[9,5], m[9,6], m[9,7], m[9,8], m[9,9])
 );
 end;
 vopros:=true;
end;

function shoot: TByteArray;	//Используем тактику стрельбы по диагоналям
var i,j:integer;
begin
xx:=0;			//9 различных диагоналей
yy:=1;
while xx<=1 do 
begin
if minus[xx,yy]=false then		//Проверяем: посещяли ли мы данную точку
begin
shoot:= TByteArray.Create(xx, yy);
minus[xx,yy]:=true;				//Сразу помечаем выбранную точку, как посещённую
exit;
end;
xx:=xx+1;
yy:=yy-1; 
end;
xx:=0;
yy:=3;
while xx<=3 do 
begin
if minus[xx,yy]=false then
begin
shoot:= TByteArray.Create(xx, yy);
minus[xx,yy]:=true;
exit;
end;
xx:=xx+1;
yy:=yy-1; 
end;
xx:=0;
yy:=5;
while xx<=5 do 
begin
if minus[xx,yy]=false then
begin
shoot:= TByteArray.Create(xx, yy);
minus[xx,yy]:=true;
exit;
end;
xx:=xx+1;
yy:=yy-1; 
end;
xx:=0;
yy:=7;
while xx<=7 do 
begin
if minus[xx,yy]=false then
begin
shoot:= TByteArray.Create(xx, yy);
minus[xx,yy]:=true;
exit;
end;
xx:=xx+1;
yy:=yy-1; 
end;
xx:=0;
yy:=9;
while xx<=9 do 
begin
if minus[xx,yy]=false then
begin
shoot:= TByteArray.Create(xx, yy);
minus[xx,yy]:=true;
exit;
end;
xx:=xx+1;
yy:=yy-1; 
end;
xx:=2;
yy:=9;
while xx<=9 do 
begin
if minus[xx,yy]=false then
begin
shoot:= TByteArray.Create(xx, yy);
minus[xx,yy]:=true;
exit;
end;
xx:=xx+1;
yy:=yy-1; 
end;
xx:=4;
yy:=9;
while xx<=9 do 
begin
if minus[xx,yy]=false then
begin
shoot:= TByteArray.Create(xx, yy);
minus[xx,yy]:=true;
exit;
end;
xx:=xx+1;
yy:=yy-1; 
end;
xx:=6;
yy:=9;
while xx<=9 do 
begin
if minus[xx,yy]=false then
begin
shoot:= TByteArray.Create(xx, yy);
minus[xx,yy]:=true;
exit;
end;
xx:=xx+1;
yy:=yy-1; 
end;
xx:=8;
yy:=9;
while xx<=9 do 
begin
if minus[xx,yy]=false then
begin
shoot:= TByteArray.Create(xx, yy);
minus[xx,yy]:=true;
exit;
end;
xx:=xx+1;
yy:=yy-1; 
end;

for i:=0 to 9 do
for j:=0 to 9 do
if minus[i,j]=false then
begin
shoot:= TByteArray.Create(i, j);
minus[i,j]:=true;
exit;
end;
end;

procedure shootResult(resultCode: integer);
begin
if resultCode=DAMAGE then 
begin
mas:=mas+2;
setlength(enemy,mas);
enemy[mas-2]:=xx;
enemy[mas-1]:=yy;
minus[xx,yy]:=true;
if iii=1 then 
end;   
if resultCode=KILL then 
begin
mas:=mas+2;
setlength(enemy,mas);
enemy[mas-2]:=xx;
enemy[mas-1]:=yy;
minus[xx,yy]:=true;

end;
if resultCode=EMPTY then
minus[xx,yy]:=true;
end;

procedure rivalShoot(point: TByteArray);
begin
end;

procedure setParams(setsPerGame: integer);
begin
mas:=2;
setlength(enemy,mas);
iii:=0;	//Динамический массив для записи кораблей противника
end;

procedure onCurrentSetEnd;
begin
iii:=1;
end;

procedure onCurrentGameEnd;
begin
setlength(enemy,2);
iii:=0;
end;

end.