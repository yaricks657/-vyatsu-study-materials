// WARNING: Do NOT edit the input and output ports in this file in a text
// editor if you plan to continue editing the block that represents it in
// the Block Editor! File corruption is VERY likely to occur.

// Copyright (C) 1991-2010 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.


// Generated by Quartus II Version 9.1 (Build Build 350 03/24/2010)
// Created on Mon Mar 27 22:26:32 2017

//  Module Declaration
module block_name
(
	// {{ALTERA_ARGS_BEGIN}} DO NOT REMOVE THIS LINE!
	clk, P, clkout, Y, Z
	// {{ALTERA_ARGS_END}} DO NOT REMOVE THIS LINE!
);
// Port Declaration

	// {{ALTERA_IO_BEGIN}} DO NOT REMOVE THIS LINE!
	input clk;
	input [8:1] P;
	output clkout;
	output [12:0] Y;
	output Z;
	// {{ALTERA_IO_END}} DO NOT REMOVE THIS LINE!
integer pc=1; 
reg [12:0] Y; 
wire clkout; 
reg Z=0; 
assign clkout=!clk; 
always @(posedge clk)
begin
case (pc)
1:begin
Y=13'b0100101000011;
pc=pc+1;
end
2:begin
if (P[3]==1)
begin
Y=13'b0010110000001;
Z=1;
pc=50;
end
else
begin
Y=13'b0000010111000;
pc=pc+1;
end
end
3:begin
Y=13'b0100000000001;
pc=pc+1;
end
4:begin
if (P[3]==1)
begin
Y=13'b0010110000001;
Z=1;
pc=50;
end
else if (!P[3]&!P[1]) begin
Y=13'b0010010000000;
end
else
begin
Y=13'b0000000000000;
end
pc=pc+1;
end
5:begin
if (P[4]==1) begin
Y=13'b0000010111000;
end
else
begin
Y=13'b0000000000000;
end
pc=pc+1;
end
6:begin
if (P[5]==1) begin
Y=13'b0000000000100;
pc=50;
end
else if (!P[5]&P[7]) begin
Y=13'b0010110000001;
Z=1;
pc=50;
end
Y=13'b0100000000000;
pc=pc+1;
end
7:begin
if (P[2]&!P[8]) begin
Y=13'b1000010000000;
pc=9;
end
else if (P[2]&P[8]&P[6]) begin
Y=13'b0000000000100;
pc=50;
end
else if (P[2]&P[8]&!P[6]) begin
Z=1;
pc=50;
end 
else if (!P[2]&P[4]) begin
Y=13'b0000010100000;
end 
else if (!P[2]&!P[4]) begin
Y=13'b0000000000000;
end
pc=pc+1;
end
8:begin
Y=13'b0100001000000;
pc=pc-1;
end
9:begin
if (P[7]==1) begin
Y=13'b0010110000000;
Z=1;
pc=50;
end else 
begin
Y=13'b0000000000000;
pc=7;
end
end
default Y=13'b000000000;
endcase;
end
endmodule
